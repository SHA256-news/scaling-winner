#!/usr/bin/env python3
"""
Test script for the AI News Bot
Quick verification that the bot works with dummy data
"""

import os
import sys
from datetime import datetime

# Add src to path so we can import the bot
sys.path.insert(0, 'src')

def test_bot_components():
    """Test individual components of the bot without API calls."""
    print("🧪 Testing AI News Bot Components...")
    
    try:
        from news_bot import NewsBot
        print("✅ Successfully imported NewsBot class")
    except ImportError as e:
        print(f"❌ Failed to import NewsBot: {e}")
        return False
    
    # Test with dummy keys (won't make API calls)
    try:
        bot = NewsBot("dummy-eventregistry-key", "dummy-google-key") 
        print("✅ Successfully created NewsBot instance")
    except Exception as e:
        print(f"❌ Failed to create bot instance: {e}")
        return False
    
    # Test article saving with dummy data
    try:
        dummy_article = {
            'title': 'Test AI News Article',
            'content': 'This is a test article generated by the AI News Bot.',
            'original_source': 'Test Source',
            'original_url': 'https://example.com/test',
            'generated_at': datetime.now().isoformat(),
            'style': 'professional'
        }
        
        filename = bot.save_article(dummy_article, "test")
        print(f"✅ Successfully saved test article: {filename}")
        
        # Check file exists and has content
        if os.path.exists(filename):
            with open(filename, 'r') as f:
                content = f.read()
                if len(content) > 100:
                    print("✅ Article file has proper content")
                else:
                    print("⚠️ Article file seems too short")
            # Cleanup
            os.remove(filename)
        else:
            print("❌ Article file was not created")
            
    except Exception as e:
        print(f"❌ Failed to test article saving: {e}")
        return False
    
    print("✅ All component tests passed!")
    return True

def test_requirements():
    """Test that all required packages are installed."""
    print("📦 Testing package imports...")
    
    try:
        import google.generativeai as genai
        print("✅ google-generativeai imported successfully")
    except ImportError:
        print("❌ google-generativeai not installed")
        return False
    
    try:
        from eventregistry import EventRegistry
        print("✅ eventregistry imported successfully")
    except ImportError:
        print("❌ eventregistry not installed")
        return False
    
    try:
        import requests
        print("✅ requests imported successfully")
    except ImportError:
        print("❌ requests not installed")  
        return False
    
    print("✅ All packages imported successfully!")
    return True

def main():
    """Run all tests."""
    print("🚀 AI News Bot Test Suite")
    print("=" * 40)
    
    # Test 1: Package imports
    if not test_requirements():
        print("\n❌ Package tests failed! Install requirements:")
        print("   pip install -r requirements.txt")
        sys.exit(1)
    
    print("\n" + "=" * 40)
    
    # Test 2: Component functionality  
    if not test_bot_components():
        print("\n❌ Component tests failed!")
        sys.exit(1)
    
    print("\n" + "=" * 40)
    print("🎉 All tests passed!")
    print("\n📋 Next Steps:")
    print("1. Set your API keys:")
    print("   export EVENTREGISTRY_API_KEY='your-key'")
    print("   export GOOGLE_API_KEY='your-key'")
    print("2. Run the bot:")
    print("   python src/news_bot.py --keyword 'test' --max-articles 1")
    print("3. Or run the GitHub workflow for full automation!")

if __name__ == "__main__":
    main()