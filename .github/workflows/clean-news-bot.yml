name: Clean News Bot

on:
  schedule:
    - cron: '0 9 * * *'  # Daily at 9 AM UTC
  workflow_dispatch:
    inputs:
      keyword:
        description: 'News search keyword'
        required: false
        default: 'artificial intelligence'
      style:
        description: 'Writing style'
        required: false
        default: 'professional'
        type: choice
        options:
          - professional
          - casual
          - academic
      max_articles:
        description: 'Maximum number of articles'
        required: false
        default: '3'
        type: choice
        options:
          - '1'
          - '2'
          - '3'
          - '5'

permissions:
  contents: read
  issues: write
  actions: read

jobs:
  generate-news:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-generativeai eventregistry
        
    - name: Run clean news bot
      env:
        EVENTREGISTRY_API_KEY: ${{ secrets.EVENTREGISTRY_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        INPUT_KEYWORD: ${{ inputs.keyword || 'artificial intelligence' }}
        INPUT_STYLE: ${{ inputs.style || 'professional' }}
        MAX_ARTICLES: ${{ inputs.max_articles || '3' }}
      run: python examples/news_bot_clean.py
      
    - name: Upload generated articles
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: news-articles-${{ github.run_number }}
        path: |
          *.md
          *.json
        retention-days: 30
        
    - name: Create GitHub Issue
      if: always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Get run parameters
          const keyword = '${{ inputs.keyword || 'artificial intelligence' }}';
          const style = '${{ inputs.style || 'professional' }}';
          const maxArticles = '${{ inputs.max_articles || '3' }}';
          const runDate = new Date().toISOString().slice(0, 19).replace('T', ' ') + ' UTC';
          
          // Count generated files
          const { execSync } = require('child_process');
          let mdCount = 0;
          let jsonCount = 0;
          let fileList = [];
          
          try {
            const mdFiles = execSync('ls *.md 2>/dev/null || true', { encoding: 'utf8' }).trim();
            if (mdFiles) {
              fileList = mdFiles.split('\n').filter(f => f);
              mdCount = fileList.length;
            }
            const jsonFiles = execSync('ls *.json 2>/dev/null || true', { encoding: 'utf8' }).trim();
            if (jsonFiles) {
              jsonCount = jsonFiles.split('\n').filter(f => f).length;
            }
          } catch (e) {
            console.log('No files found or error counting files');
          }
          
          // Create issue title
          const issueTitle = \`📰 News Articles: "\${keyword}" - \${runDate}\`;
          
          // Build issue body
          let issueBody = \`# 🤖 Clean News Bot Results

**Generated:** \${runDate}  
**Keyword:** \\\`\${keyword}\\\`  
**Style:** \\\`\${style}\\\`  
**Max Articles:** \${maxArticles}  
**Articles Created:** \${mdCount}  
**Run #:** ${{ github.run_number }}

---

## 📋 Generated Articles

\`;

          // Add article previews
          if (mdCount > 0) {
            for (const file of fileList) {
              try {
                const content = fs.readFileSync(file, 'utf8');
                const lines = content.split('\n');
                const title = lines.find(l => l.startsWith('# '))?.substring(2) || file;
                const preview = lines.slice(10, 15).join('\n').substring(0, 200);
                
                issueBody += \`### 📰 \${title}

\${preview}...

**[📄 Download full article from artifacts]**

\`;
              } catch (e) {
                issueBody += \`### 📰 \${file}

Preview not available.

\`;
              }
            }
          } else {
            issueBody += \`No articles were generated in this run. Check the workflow logs for details.

\`;
          }
          
          issueBody += \`---

## 📥 Download Complete Files

All articles and metadata are available in the workflow artifacts:

🔗 **[Download Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})**

### 📁 Files Generated:
- **Markdown Articles:** \${mdCount} files
- **JSON Reports:** \${jsonCount} files

---

## 🔄 Workflow Info

- **Trigger:** ${{ github.event_name }}
- **Repository:** ${{ github.repository }}
- **Branch:** ${{ github.ref_name }}
- **Workflow Run:** [${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

> 🤖 Generated by Clean News Bot using EventRegistry API + Google Gemini AI
\`;

          // Create the issue
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: issueTitle,
            body: issueBody,
            labels: [
              'news-bot',
              'automated',
              \`keyword:\${keyword.replace(' ', '-')}\`,
              \`style:\${style}\`,
              mdCount > 0 ? 'success' : 'no-articles',
              '${{ github.event_name }}' === 'schedule' ? 'daily-run' : 'manual-run'
            ]
          });
          
          console.log(\`✅ Created issue #\${issue.data.number}: \${issueTitle}\`);
